---
import Icon from './ui/Icon.astro';
import { buildButtonClass, getIconSize } from '../lib/button-styles';

interface Props {
  id: string;
}

const { id } = Astro.props;

const buttonClass = buildButtonClass('carousel', 'md', true);
const iconSize = getIconSize('lg');
---

<div class="carousel-container" data-carousel-id={id}>
  <!-- Shared Carousel Content (visible on all screens) -->
  <div class="carousel-content-wrapper">
    <div class="carousel-content">
      <slot />
    </div>
  </div>

  <!-- Carousel Controls - Only visible on desktop -->
  <div class="carousel-controls lg-only">
    <!-- Navigation Buttons Container -->
    <div class="carousel-buttons-wrapper">
      <!-- Left Navigation Button -->
      <button
        class={`carousel-prev-btn ${buttonClass}`}
        aria-label="Предыдущий пример"
        title="Предыдущий пример"
      >
        <Icon name="arrow-left" class={iconSize} />
      </button>

      <!-- Right Navigation Button -->
      <button
        class={`carousel-next-btn ${buttonClass}`}
        aria-label="Следующий пример"
        title="Следующий пример"
      >
        <Icon name="arrow-right" class={iconSize} />
      </button>
    </div>
  </div>

  <!-- Shared Indicators (only visible on desktop) -->
  <div class="carousel-indicators mt-4 lg-only">
    <!-- Carousel Indicator -->
    <div class="carousel-indicator text-center text-gray-400 font-mono text-sm">
      <span class="current-index">1</span> / <span class="total-items">4</span>
    </div>

    <!-- Dots Indicator -->
    <div class="carousel-dots flex items-center justify-center gap-2 mt-3">
      <!-- Will be populated by JavaScript -->
    </div>
  </div>
</div>

<style>
  .carousel-container {
    width: 100%;
    position: relative;
  }

  .carousel-content {
    position: relative;
  }

  /* Mobile: Show all items vertically, no carousel behavior */
  .carousel-content :global(.carousel-item) {
    display: block;
    margin-bottom: 1.5rem;
  }

  /* Hide desktop-only carousel items on mobile */
  .carousel-content :global(.carousel-item-desktop-only) {
    display: none;
  }

  /* Hide controls and indicators on mobile */
  .lg-only {
    display: none;
  }

  /* Desktop: Enable carousel behavior */
  @media (min-width: 1024px) {
    .carousel-content {
      overflow: hidden;
    }

    .carousel-content :global(.carousel-item) {
      display: none;
      animation: fadeIn 0.4s ease-in-out;
      margin-bottom: 0;
    }

    .carousel-content :global(.carousel-item.active) {
      display: block;
    }

    /* Show desktop-only items on desktop (they follow normal carousel rules) */
    .carousel-content :global(.carousel-item-desktop-only) {
      display: none;
    }

    .carousel-content :global(.carousel-item-desktop-only.active) {
      display: block;
    }

    /* Show controls and indicators on desktop */
    .lg-only {
      display: block;
    }

    /* Carousel Controls Positioning */
    .carousel-controls {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 1rem;
    }

    .carousel-buttons-wrapper {
      width: 100%;
      display: flex;
      justify-content: space-between;
    }

    .carousel-buttons-wrapper button {
      pointer-events: auto;
    }

    .carousel-content-wrapper {
      padding: 0 4rem;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateX(20px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .carousel-dot {
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: rgba(156, 163, 175, 0.5);
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .carousel-dot:hover {
      background-color: rgba(156, 163, 175, 0.8);
      transform: scale(1.2);
    }

    .carousel-dot.active {
      background-color: rgb(59, 130, 246);
      transform: scale(1.3);
    }
  }
</style>
