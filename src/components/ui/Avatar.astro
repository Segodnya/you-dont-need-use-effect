---
/**
 * Avatar - Rounded image component for author profile
 *
 * Features:
 * - Rounded circular image
 * - Gradient border effect matching app's UI kit
 * - Responsive sizing
 * - Shadow effects for depth
 * - Progressive loading with blur placeholder
 * - WebP with JPEG fallback for optimal performance
 */

export interface Props {
  src: string;
  alt: string;
  size?: 'sm' | 'md' | 'lg' | 'xl';
  class?: string;
  loading?: 'lazy' | 'eager';
  decoding?: 'async' | 'sync' | 'auto';
  placeholder?: string;
}

const {
  src,
  alt,
  size = 'lg',
  class: className = '',
  loading = 'lazy',
  decoding = 'async',
  placeholder,
} = Astro.props;

const sizeClasses = {
  sm: 'w-24 h-24',
  md: 'w-32 h-32',
  lg: 'w-48 h-48',
  xl: 'w-64 h-64',
};

// Check if src is a JPEG and create WebP version path
const isJpeg = src.endsWith('.jpeg') || src.endsWith('.jpg');
const webpSrc = isJpeg ? src.replace(/\.(jpeg|jpg)$/, '.webp') : null;
---

<div class={`relative ${className}`}>
  <!-- Gradient border wrapper -->
  <div
    class={`relative ${sizeClasses[size]} rounded-full bg-linear-to-br from-cyan-400 via-blue-500 to-purple-600 p-1 shadow-xl`}
  >
    <!-- Inner white border for better contrast -->
    <div class="w-full h-full rounded-full bg-background p-1">
      <!-- Avatar image with progressive loading -->
      <div class="relative w-full h-full rounded-full overflow-hidden">
        {
          placeholder && (
            <img
              src={placeholder}
              alt=""
              class="absolute inset-0 w-full h-full object-cover blur-xl scale-110 opacity-60"
              aria-hidden="true"
            />
          )
        }

        <!-- Use picture element for WebP with fallback -->
        <picture>
          {webpSrc && <source srcset={webpSrc} type="image/webp" />}
          <img
            src={src}
            alt={alt}
            class="relative w-full h-full rounded-full object-cover shadow-lg transition-opacity duration-300"
            loading={loading}
            decoding={decoding}
            onload="this.style.opacity='1'"
            style={placeholder ? 'opacity: 0' : 'opacity: 1'}
          />
        </picture>
      </div>
    </div>
  </div>
</div>
