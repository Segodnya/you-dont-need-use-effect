---
export interface Props {
  variant?: 'default' | 'hover' | 'gradient-border';
  color?: 'gray' | 'blue' | 'green' | 'red' | 'cyan' | 'purple' | 'pink' | 'yellow';
  class?: string;
}

const { variant = 'default', color = 'gray', class: className = '' } = Astro.props;

const baseClasses = 'relative rounded-xl p-6';

const backgroundGradients = {
  gray: 'from-gray-500/20 via-gray-600/20 to-gray-700/20',
  blue: 'from-blue-500/20 via-purple-500/20 to-cyan-500/20',
  green: 'from-green-500/20 via-emerald-500/20 to-teal-500/20',
  red: 'from-red-500/20 via-rose-500/20 to-pink-500/20',
  cyan: 'from-cyan-500/20 via-blue-500/20 to-indigo-500/20',
  purple: 'from-purple-500/20 via-violet-500/20 to-indigo-500/20',
  pink: 'from-pink-500/20 via-rose-500/20 to-red-500/20',
  yellow: 'from-yellow-500/20 via-amber-500/20 to-orange-500/20',
};

const colorClasses = {
  gray: 'backdrop-blur-sm',
  blue: 'backdrop-blur-sm',
  green: 'backdrop-blur-sm',
  red: 'backdrop-blur-sm',
  cyan: 'backdrop-blur-sm',
  purple: 'backdrop-blur-sm',
  pink: 'backdrop-blur-sm',
  yellow: 'backdrop-blur-sm',
};

const variantClasses = {
  default: '',
  hover: 'hover:border-opacity-60 transition-all duration-300',
  'gradient-border': '',
};
---

<div class={`${baseClasses} ${className}`}>
  {/* Blurry background */}
  <div class={`absolute inset-0 bg-linear-to-br ${backgroundGradients[color]} rounded-xl blur-sm transform scale-110`}></div>
  
  {/* Card content */}
  <div class={`relative ${colorClasses[color]} ${variantClasses[variant]} rounded-xl`}>
    <slot />
  </div>
</div>
