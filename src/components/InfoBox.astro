---
export interface Props {
  type?: 'info' | 'warning' | 'success' | 'error' | 'tip';
  title?: string;
  className?: string;
}

const { type = 'info', title, className = '' } = Astro.props;

const typeStyles = {
  info: {
    bg: 'bg-blue-950/20',
    border: 'border-blue-500/30',
    icon: 'üí°',
    textColor: 'text-blue-200',
    titleColor: 'text-blue-300',
  },
  warning: {
    bg: 'bg-yellow-950/20',
    border: 'border-yellow-500/30',
    icon: '‚ö†Ô∏è',
    textColor: 'text-yellow-200',
    titleColor: 'text-yellow-300',
  },
  success: {
    bg: 'bg-green-950/20',
    border: 'border-green-500/30',
    icon: '‚úÖ',
    textColor: 'text-green-200',
    titleColor: 'text-green-300',
  },
  error: {
    bg: 'bg-red-950/20',
    border: 'border-red-500/30',
    icon: '‚ùå',
    textColor: 'text-red-200',
    titleColor: 'text-red-300',
  },
  tip: {
    bg: 'bg-purple-950/20',
    border: 'border-purple-500/30',
    icon: 'üí°',
    textColor: 'text-purple-200',
    titleColor: 'text-purple-300',
  },
};

const style = typeStyles[type];
---

<div
  class={`${style.bg} border ${style.border} rounded-lg p-4 lg:p-6 ${className}`}
>
  <div class="flex items-start gap-3">
    <span class="text-2xl flex-shrink-0">{style.icon}</span>
    <div class="flex-1">
      {
        title && (
          <h4 class={`font-semibold mb-2 ${style.titleColor}`}>{title}</h4>
        )
      }
      <div class={style.textColor}>
        <slot />
      </div>
    </div>
  </div>
</div>
