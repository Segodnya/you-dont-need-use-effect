---
import BaseSlide from './BaseSlide.astro';
import SteppedCodeComparison from '../SteppedCodeComparison.astro';
import Text from '../ui/Text.astro';
import Callout from '../ui/Callout.astro';
import Section from '../ui/Section.astro';
---

<BaseSlide id="effect-as-handler" title="5. Эффект как обработчик событий">
  <Section>
    <Text>
      Эффект используется как 'наблюдатель' за состоянием. Это антипаттерн!
    </Text>

    <SteppedCodeComparison
      carouselId="effect-as-handler-comparison"
      badCode={`function Form() {
  const [dataToSubmit, setDataToSubmit] = useState();

  useEffect(() => {
    if (dataToSubmit) {
      submitData(dataToSubmit);
    }
  }, [dataToSubmit]);
}`}
      goodCode={`function Form() {
  const [dataToSubmit, setDataToSubmit] = useState();

  const handleSubmit = () => {
    submitData(dataToSubmit);
  };
  
  return <button onClick={handleSubmit}>Submit</button>;
}`}
      language="tsx"
    />

    <Callout variant="tip">
      Выполняйте side-эффекты напрямую в ответ на действия пользователя, а не
      через наблюдение за состоянием.
    </Callout>
  </Section>
</BaseSlide>
