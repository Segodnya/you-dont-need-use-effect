---
import BaseSlide from './BaseSlide.astro';
import SteppedCodeComparison from '../SteppedCodeComparison.astro';
import Text from '../ui/Text.astro';
import Callout from '../ui/Callout.astro';
import Section from '../ui/Section.astro';
---

<BaseSlide
  id="notifying-parent"
  title="8. Передача актуального состояния в родитель"
>
  <Section>
    <Text>
      Родитель получает обновление с задержкой - после рендера и эффекта. Это
      может привести к рассинхронизации.
    </Text>

    <SteppedCodeComparison
      carouselId="notifying-parent-comparison"
      badCode={`function Toggle({ onChange }) {
  const [isOn, setIsOn] = useState(false);

  useEffect(() => {
    onChange(isOn); // Передача состояния в эффекте
  }, [isOn, onChange]);
}`}
      goodCode={`function Toggle({ onChange }) {
  const [isOn, setIsOn] = useState(false);
  
  function updateToggle(nextIsOn) {
    setIsOn(nextIsOn);
    onChange(nextIsOn); // Сразу уведомляем
  }
  
  return <button onClick={() => updateToggle(!isOn)} />;
}`}
      language="tsx"
    />

    <Callout variant="tip">
      Обновляйте состояние и уведомляйте родителя синхронно в одном месте.
      Теперь уведомление происходит только в ответ на действие пользователя.
    </Callout>
  </Section>
</BaseSlide>
