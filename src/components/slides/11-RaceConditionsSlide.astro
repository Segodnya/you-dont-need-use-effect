---
import BaseSlide from './BaseSlide.astro';
import CodeComparison from '../CodeComparison.astro';
import Text from '../ui/Text.astro';
import Callout from '../ui/Callout.astro';
import Section from '../ui/Section.astro';
---

<BaseSlide id="race-conditions" title="4б. Race Conditions в цепочках">
  <Section>
    <Text>
      Что, если user изменится, пока мы получаем profile? Race condition налицо.
    </Text>

    <CodeComparison
      badCode={`useEffect(() => {
  if (user) {
    setProfile(null);
    fetchProfile(user.id).then(setProfile);
  }
}, [user]);

useEffect(() => {
  if (profile) {
    setPosts([]);
    fetchPosts(profile.id).then(setPosts);
  }
}, [profile]);`}
      goodCode={`// Объединяем логику в событии
async function loadUserData(userId) {
  const profile = await fetchProfile(userId);
  setProfile(profile);
  
  const posts = await fetchPosts(profile.id);
  setPosts(posts);
}

// Или используйте библиотеку для data fetching`}
      language="tsx"
    />

    <Callout variant="warning" icon="⚠️">
      Проблема: Мы получим profile для старого пользователя, а потом и posts для
      него же.
    </Callout>
  </Section>
</BaseSlide>
