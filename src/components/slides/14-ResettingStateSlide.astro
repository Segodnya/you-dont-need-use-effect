---
import BaseSlide from './BaseSlide.astro';
import SteppedCodeComparison from '../SteppedCodeComparison.astro';
import Text from '../ui/Text.astro';
import Callout from '../ui/Callout.astro';
import Section from '../ui/Section.astro';
---

<BaseSlide
  id="resetting-state"
  title="7. Полный сброс состояния при изменении пропса"
>
  <Section>
    <Text>
      Когда нужно сбросить все состояние при изменении пропса, не нужно делать
      это вручную через эффект.
    </Text>

    <SteppedCodeComparison
      carouselId="resetting-state-comparison"
      badCode={`function ProfilePage({ userId }) {
  const [user, setUser] = useState(null);
  const [comment, setComment] = useState('');

  useEffect(() => {
    setUser(null);
    setComment('');
  }, [userId]);
}`}
      goodCode={`function ProfilePage({ userId }) {
  return <Profile userId={userId} key={userId} />;
}

function Profile({ userId }) {
  // При изменении key компонент 
  // полностью пересоздается
  const [comment, setComment] = useState('');
}`}
      language="tsx"
    />

    <Callout variant="tip">
      Используйте key проп - это идиоматический способ сказать React: 'это
      совершенно другой экземпляр компонента'.
    </Callout>
  </Section>
</BaseSlide>
